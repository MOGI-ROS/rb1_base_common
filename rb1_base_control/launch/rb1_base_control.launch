<?xml version="1.0"?>
<launch>
	<arg name="id_robot" default="$(optenv ROBOT_ID robot)"/>
	<arg name="prefix" default="$(arg id_robot)_"/>

	<arg name="sim" default="false"/>
	<arg name="cmd_vel" default="robotnik_base_control/cmd_vel"/>
	<arg name="has_elevator" default="$(optenv ROBOT_HAS_ELEVATOR false)"/>
	<arg name="elevator_controller" default="robotnik_elevator_controller"/>
	<arg name="fake_elevator_physics" default="false"/>
	<arg name="wheel_diameter" default="0.1524"/>
	<arg name="use_ros_planar_move_plugin" default="false"/>
	<arg name="base_frame" default="$(arg prefix)base_footprint"/>
	<arg name="odom_frame" default="$(arg prefix)odom"/>
	<arg name="imu_topic" default="imu/data"/>
	<arg name="odom_broadcast_tf" default="true"/>

	<!-- Robot - Load joint controller configurations from YAML file to parameter server -->
	<group unless="$(arg sim)">
		<!-- Load joint controller configurations from YAML file to parameter server -->
		<rosparam file="$(find rb1_base_control)/config/rb1_base_control.yaml" command="load" subst_value="true"/>

		<!-- load the controllers -->
		<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
  						  robotnik_base_control
  						  joint_read_state_controller
  						  ">
		</node>
	</group>

	<!-- Simulation - Load joint controller configurations from YAML file to parameter server -->
	<group if="$(arg sim)">

		<!-- Load joint controller configurations from YAML file to parameter server -->
		<rosparam file="$(find rb1_base_control)/config/simulation/rb1_base_diffdrive_control.yaml" command="load" subst_value="true"/>
		<param name="robotnik_elevator_controller/gazebo/robot_model" value="$(arg id_robot)"/>

		<!-- load the controllers -->
		<node if="$(arg use_ros_planar_move_plugin)" name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
  						  joint_read_state_controller
  						  ">
		</node>

		<node unless="$(arg use_ros_planar_move_plugin)" name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
  						  robotnik_base_control
  						  joint_read_state_controller
  						  ">
		</node>

		<!-- load elevator controller -->
		<node if="$(arg has_elevator)" name="elevator_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="$(arg elevator_controller)"/>

	</group>

	<node pkg="twist_mux" type="twist_mux" name="twist_mux">
		<rosparam command="load" file="$(find rb1_base_control)/config/twist_mux.yaml" />
		<remap from="cart_docker/cmd_vel" to="docker/cmd_vel"/>
		<remap from="cmd_vel_out" to="robotnik_base_control/cmd_vel" />
	</node>




</launch>
