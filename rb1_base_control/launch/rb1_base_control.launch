<?xml version="1.0"?>
<launch>

  <arg name="sim" default="false"/>
  <arg name="cmd_vel" default="robotnik_base_control/cmd_vel"/>
  <arg name="id_robot" default="rb1_base"/>
  <arg name="prefix" default="rb1_base_"/>
  <arg name="launch_robot_localization" default="false"/>
  <arg name="has_elevator" default="false"/>
  <arg name="elevator_controller" default="robotnik_elevator_controller"/>
  <arg name="fake_elevator_physics" default="false"/>
  <arg name="wheel_diameter" default="0.1524"/>

  <!-- Robot - Load joint controller configurations from YAML file to parameter server -->
  <group unless="$(arg sim)">
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam
      command="load"
      file="$(find rb1_base_control)/config/rb1_base_control.yaml"
      subst_value="true"
    />

    <!-- load the controllers -->
    <node
      name="controller_spawner"
      pkg="controller_manager"
      type="spawner"
      respawn="false"
      output="screen"
      args="
        robotnik_base_control
        joint_read_state_controller
        "
    >
    </node>
  </group>

  <!-- Simulation - Load joint controller configurations from YAML file to parameter server -->
  <group if="$(arg sim)">

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam
      command="load"
      file="$(find rb1_base_control)/config/rb1_base_diffdrive_control.yaml"
      subst_value="true"
    />
    <!-- if robot_localization node is launched the controller must not publish the odom tf-->
    <!--param if="$(arg launch_robot_localization)" name="robotnik_base_control/enable_odom_tf" value="false"/-->


    <!-- load the controllers -->
    <node
      name="controller_spawner"
      pkg="controller_manager"
      type="spawner"
      respawn="false"
      output="screen"
      args="
        robotnik_base_control
        joint_read_state_controller
        "
    >
    </node>
    <!-- load elevator controller -->
    <node
         if="$(arg has_elevator)"
         name="elevator_controller_spawner"
         pkg="controller_manager"
         type="spawner"
         respawn="false"
        output="screen"
        args="$(arg elevator_controller)"
    />
  </group>

  <node
    pkg="twist_mux"
    type="twist_mux"
    name="twist_mux"
  >
    <rosparam command="load" file="$(find rb1_base_control)/config/twist_mux.yaml" />
    <remap from="cart_docker/cmd_vel" to="docker/cmd_vel"/>
    <remap from="cmd_vel_out" to="robotnik_base_control/cmd_vel" />
  </node>

</launch>
